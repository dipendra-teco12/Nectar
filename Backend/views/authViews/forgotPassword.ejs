<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Nectar | Forgot Password (v2)</title>

    <!-- Google Font: Source Sans Pro -->
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback"
    />

    <!-- Font Awesome -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />

    <!-- icheck bootstrap -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/icheck-bootstrap/3.0.1/icheck-bootstrap.min.css"
    />

    <!-- Bootstrap 4 -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css"
    />

    <!-- Theme style -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/admin-lte/3.2.0/css/adminlte.min.css"
    />
    <style>
      .login-box {
        width: 360px;
        margin: auto;
      }

      .login-card-body {
        min-height: 280px; /* Reduced height */
      }

      .error-message {
        color: #dc3545;
        font-size: 0.875em;
        margin-top: 0.25rem;
        display: block;
        min-height: 1.2em; /* Reserve space for error messages */
        line-height: 1.2;
      }

      .is-invalid {
        border-color: #dc3545;
      }

      .input-group .is-invalid ~ .input-group-append .input-group-text {
        border-color: #dc3545;
      }

      .success-message {
        color: #28a745;
        font-size: 0.875em;
        margin-top: 0.25rem;
        display: block;
        min-height: 1.2em; /* Reserve space for success messages */
        line-height: 1.2;
      }

      .countdown {
        color: #6c757d;
        font-size: 0.875em;
        margin-top: 0.25rem;
        min-height: 1.2em; /* Reserve space for countdown */
        line-height: 1.2;
      }

      /* Ensure consistent spacing */
      .input-group {
        margin-bottom: 0.5rem !important;
      }

      /* Fixed positioning for form elements */
      .form-section {
        margin-bottom: 1rem;
      }

      /* Form sections maintain compact height */
      .form-step {
        min-height: auto;
      }

      /* Bottom links normal positioning */
      .bottom-links {
        margin-top: 1rem;
        padding-top: 0;
      }

      /* Password strength indicator */
      .password-strength {
        margin-top: 0.5rem;
        min-height: 2em;
      }

      .strength-bar {
        height: 4px;
        background-color: #e9ecef;
        border-radius: 2px;
        overflow: hidden;
        margin-bottom: 0.25rem;
      }

      .strength-fill {
        height: 100%;
        transition: all 0.3s ease;
        border-radius: 2px;
      }

      .strength-text {
        font-size: 0.75rem;
        font-weight: 500;
      }
    </style>
  </head>
  <body class="hold-transition login-page">
    <div class="login-box">
      <div class="card card-outline card-primary">
        <div class="card-header text-center">
          <a href="../../index2.html" class="h1"><b>Nectar</b></a>
        </div>
        <div class="card-body">
          <p class="login-box-msg">
            You forgot your password? Here you can easily retrieve a new
            password.
          </p>
          <!-- Send OTP Section -->
          <form id="send-otp-form" novalidate>
            <div class="form-section">
              <div class="input-group">
                <input
                  type="email"
                  class="form-control"
                  id="email"
                  name="email"
                  placeholder="Email"
                  required
                />
                <div class="input-group-append">
                  <div class="input-group-text">
                    <span class="fas fa-envelope"></span>
                  </div>
                </div>
              </div>
              <div class="error-message" id="emailError"></div>
              <div class="success-message" id="emailSuccess"></div>
            </div>

            <div class="row">
              <div class="col-12">
                <button
                  type="submit"
                  id="sendOtpBtn"
                  class="btn btn-primary btn-block"
                >
                  Send OTP
                </button>
              </div>
            </div>
            <div class="countdown" id="resendCountdown"></div>
          </form>

          <!-- Verify OTP Section (hidden initially) -->
          <form
            id="verify-otp-form"
            style="display: none; margin-top: 20px"
            novalidate
          >
            <div class="form-section">
              <div class="input-group">
                <input
                  type="text"
                  class="form-control"
                  id="otp"
                  name="otp"
                  placeholder="Enter 4-digit OTP"
                  maxlength="4"
                  required
                />
                <div class="input-group-append">
                  <div class="input-group-text">
                    <span class="fas fa-key"></span>
                  </div>
                </div>
              </div>
              <div class="error-message" id="otpError"></div>
              <div class="success-message" id="otpSuccess"></div>
            </div>

            <div class="row">
              <div class="col-12">
                <button
                  type="submit"
                  id="verifyOtpBtn"
                  class="btn btn-primary btn-block"
                >
                  Verify OTP
                </button>
              </div>
            </div>
            <div class="text-center mt-2">
              <button
                type="button"
                id="resendOtpBtn"
                class="btn btn-link btn-sm"
                disabled
              >
                Resend OTP (60s)
              </button>
            </div>
          </form>

          <!-- Reset Password Section (hidden initially) -->
          <form
            id="reset-password-form"
            style="display: none; margin-top: 20px"
            novalidate
          >
            <div class="form-section">
              <div class="input-group">
                <input
                  type="password"
                  class="form-control"
                  id="new-password"
                  name="newPassword"
                  placeholder="New Password"
                  required
                />
                <div class="input-group-append">
                  <div class="input-group-text">
                    <span class="fas fa-lock"></span>
                  </div>
                </div>
              </div>
              <div class="error-message" id="newPasswordError"></div>
            </div>

            <div class="form-section">
              <div class="input-group">
                <input
                  type="password"
                  class="form-control"
                  id="confirm-password"
                  name="confirmPassword"
                  placeholder="Confirm New Password"
                  required
                />
                <div class="input-group-append">
                  <div class="input-group-text">
                    <span class="fas fa-lock"></span>
                  </div>
                </div>
              </div>
              <div class="error-message" id="confirmPasswordError"></div>
            </div>

            <div class="row">
              <div class="col-12">
                <button
                  type="submit"
                  id="resetPasswordBtn"
                  class="btn btn-primary btn-block"
                >
                  Reset Password
                </button>
              </div>
            </div>
          </form>
          <p class="mt-3 mb-1">
            <a href="/">Login</a>
          </p>
        </div>
        <!-- /.login-card-body -->
      </div>
    </div>
    <!-- /.login-box -->
    <!-- jQuery -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <!-- Bootstrap 4 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/js/bootstrap.bundle.min.js"></script>

    <!-- AdminLTE App -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/admin-lte/3.2.0/js/adminlte.min.js"></script>
    <script>
      $(document).ready(() => {
        let resendTimer = null;
        let resendCountdown = 0;

        const setError = (id, msg) => {
          const errorElement = $("#" + id + "Error");
          const inputElement = $("#" + id.replace("Error", ""));

          if (msg) {
            errorElement.text(msg).show();
            inputElement.addClass("is-invalid");
          } else {
            errorElement.text("").hide();
            inputElement.removeClass("is-invalid");
          }
        };

        const setSuccess = (id, msg) => {
          const successElement = $("#" + id + "Success");
          if (msg) {
            successElement.text(msg).show();
          } else {
            successElement.text("").hide();
          }
        };

        const clearError = (id) => {
          setError(id, "");
          setSuccess(id, "");
        };

        // Clear errors when user starts typing
        $("#email, #otp, #new-password, #confirm-password").on(
          "input",
          function () {
            clearError(this.id);
          }
        );

        // Email validation
        function validateEmail(email) {
          if (!email) {
            setError("email", "Email is required.");
            return false;
          }

          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          if (!emailRegex.test(email)) {
            setError("email", "Please enter a valid email address.");
            return false;
          }

          if (email.length > 254) {
            setError("email", "Email address is too long.");
            return false;
          }

          return true;
        }

        // OTP validation
        function validateOTP(otp) {
          if (!otp) {
            setError("otp", "OTP is required.");
            return false;
          }

          if (!/^\d{4}$/.test(otp)) {
            setError("otp", "OTP must be exactly 4 digits.");
            return false;
          }

          return true;
        }

        // Password strength checker
        function checkPasswordStrength(password) {
          let score = 0;
          let feedback = [];

          if (password.length >= 8) score += 1;
          else feedback.push("at least 8 characters");

          if (/[a-z]/.test(password)) score += 1;
          else feedback.push("lowercase letter");

          if (/[A-Z]/.test(password)) score += 1;
          else feedback.push("uppercase letter");

          if (/\d/.test(password)) score += 1;
          else feedback.push("number");

          if (/[^a-zA-Z\d]/.test(password)) score += 1;
          else feedback.push("special character");

          const strength = ["Very Weak", "Weak", "Fair", "Good", "Strong"];
          const colors = [
            "#dc3545",
            "#fd7e14",
            "#ffc107",
            "#20c997",
            "#28a745",
          ];

          return {
            score: score,
            percentage: (score / 5) * 100,
            text: strength[score] || "Very Weak",
            color: colors[score] || "#dc3545",
            feedback: feedback,
          };
        }

        // Password validation
        function validatePassword(password, confirmPassword) {
          let valid = true;

          if (!password) {
            setError("newPassword", "New password is required.");
            valid = false;
          } else {
            const strength = checkPasswordStrength(password);

            if (password.length < 8) {
              setError(
                "newPassword",
                "Password must be at least 8 characters long."
              );
              valid = false;
            }
          }

          if (!confirmPassword) {
            setError("confirmPassword", "Please confirm your password.");
            valid = false;
          } else if (password && password !== confirmPassword) {
            setError("confirmPassword", "Passwords do not match.");
            valid = false;
          }

          return valid;
        }

        // Resend countdown timer
        function startResendTimer() {
          resendCountdown = 60;
          const resendBtn = $("#resendOtpBtn");

          resendTimer = setInterval(() => {
            resendCountdown--;
            resendBtn
              .text(`Resend OTP (${resendCountdown}s)`)
              .prop("disabled", true);

            if (resendCountdown <= 0) {
              clearInterval(resendTimer);
              resendBtn.text("Resend OTP").prop("disabled", false);
            }
          }, 1000);
        }

        // Auto-format OTP input
        $("#otp").on("input", function () {
          let value = $(this).val().replace(/\D/g, ""); // Only digits
          if (value.length > 4) value = value.slice(0, 4);
          $(this).val(value);
        });

        // Send OTP
        $("#send-otp-form").on("submit", function (e) {
          e.preventDefault();
          const email = $("#email").val().trim();
          if (!validateEmail(email)) return;

          const sendBtn = $("#sendOtpBtn");
          sendBtn.prop("disabled", true).text("Sending OTP...");

          $.ajax({
            url: "/api/auth/forgetpassword",
            type: "POST",
            data: JSON.stringify({ email }),
            contentType: "application/json",
            dataType: "json",
          })
            .done((res) => {
              setSuccess(
                "email",
                res.message || "OTP sent! Please check your email."
              );
              setTimeout(() => {
                $("#send-otp-form").hide();
                $("#verify-otp-form").show();
                $("#otp").focus();
                startResendTimer();
              }, 1500);
            })
            .fail((error) => {
              if (error.status === 404) {
                setError("email", "No account found with this email address.");
              } else {
                setError(
                  "email",
                  error.responseJSON?.message || "Error sending OTP."
                );
              }
            })
            .always(() => {
              sendBtn.prop("disabled", false).text("Send OTP");
            });
        });

        // Resend OTP
        $("#resendOtpBtn").on("click", function () {
          const email = $("#email").val().trim();
          const resendBtn = $("#resendOtpBtn");
          resendBtn.prop("disabled", true).text("Resending...");

          $.ajax({
            url: "/api/auth/forgetpassword",
            type: "POST",
            data: JSON.stringify({ email }),
            contentType: "application/json",
            dataType: "json",
          })
            .done((res) => {
              setSuccess("otp", "New OTP sent successfully!");
              startResendTimer();
              setTimeout(() => setSuccess("otp", ""), 3000);
            })
            .fail(() => {
              setError("otp", "Failed to resend OTP. Please try again.");
            });
        });

        // Verify OTP
        $("#verify-otp-form").on("submit", function (e) {
          e.preventDefault();
          const email = $("#email").val().trim();
          const otp = $("#otp").val().trim();
          if (!validateOTP(otp)) return;

          const verifyBtn = $("#verifyOtpBtn");
          verifyBtn.prop("disabled", true).text("Verifying...");

          $.ajax({
            url: "/api/auth/verifyotp",
            type: "POST",
            data: JSON.stringify({ email, otp }),
            contentType: "application/json",
            dataType: "json",
          })
            .done((res) => {
              setSuccess("otp", res.message || "OTP verified successfully!");
              if (resendTimer) clearInterval(resendTimer);

              setTimeout(() => {
                $("#verify-otp-form").hide();
                $("#reset-password-form").show();
                $("#new-password").focus();
              }, 1500);
            })
            .fail((error) => {
              if (error.status === 400) {
                setError("otp", "Invalid or expired OTP. Please try again.");
              } else {
                setError(
                  "otp",
                  error.responseJSON?.message || "OTP verification failed."
                );
              }
            })
            .always(() => {
              verifyBtn.prop("disabled", false).text("Verify OTP");
            });
        });

        // Reset Password
        $("#reset-password-form").on("submit", function (e) {
          e.preventDefault();
          const email = $("#email").val().trim();
          const newPassword = $("#new-password").val();
          const confirmPassword = $("#confirm-password").val();
          if (!validatePassword(newPassword, confirmPassword)) return;

          const resetBtn = $("#resetPasswordBtn");
          resetBtn.prop("disabled", true).text("Resetting Password...");

          $.ajax({
            url: "/api/auth/resetPassword",
            type: "POST",
            data: JSON.stringify({ email, password: newPassword }),
            contentType: "application/json",
            dataType: "json",
          })
            .done((res) => {
              alert(
                res.message ||
                  "Password reset successful! You can now login with your new password."
              );
              window.location.href = "/";
            })
            .fail((error) => {
              if (error.status === 400) {
                setError(
                  "newPassword",
                  "Password reset session expired. Please start over."
                );
              } else {
                alert(error.responseJSON?.message || "Password reset failed.");
              }
            })
            .always(() => {
              resetBtn.prop("disabled", false).text("Reset Password");
            });
        });

        // Handle Enter key navigation
        $("#email").on("keypress", function (e) {
          if (e.which === 13) $("#send-otp-form").submit();
        });

        $("#otp").on("keypress", function (e) {
          if (e.which === 13) $("#verify-otp-form").submit();
        });

        $("#new-password, #confirm-password").on("keypress", function (e) {
          if (e.which === 13) $("#reset-password-form").submit();
        });
      });
    </script>
  </body>
</html>
