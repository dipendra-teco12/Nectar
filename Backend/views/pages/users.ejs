<section class="content">
  <div class="container-fluid">
    <div class="row">
      <div class="col-12">
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">All Users</h3>
            <div class="card-tools">
              <button
                type="button"
                class="btn btn-primary btn-sm"
                id="refreshTable"
              >
                <i class="fas fa-sync-alt"></i> Refresh
              </button>
              <button
                type="button"
                class="btn btn-success btn-sm ml-2"
                onclick="window.location.href='/admin/users/add'"
              >
                <i class="fas fa-plus"></i> Add User
              </button>
            </div>
          </div>

          <div class="card-body">
            <div class="table-responsive">
              <table
                id="usersTable"
                class="table table-bordered table-striped table-hover"
              >
                <thead class="thead-dark">
                  <tr>
                    <th>Full Name</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Status</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <!-- DataTables will populate this -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- User Details Modal -->
<div class="modal fade" id="userModal" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="userModalTitle">User Details</h5>
        <button type="button" class="close" data-dismiss="modal">
          <span>&times;</span>
        </button>
      </div>
      <div class="modal-body" id="userModalBody">
        <!-- User details will be loaded here -->
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">
          Close
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header bg-danger">
        <h5 class="modal-title text-white">Confirm Delete</h5>
        <button type="button" class="close text-white" data-dismiss="modal">
          <span>&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete this user?</p>
        <p><strong>Name:</strong> <span id="deleteUserName"></span></p>
        <p><strong>Email:</strong> <span id="deleteUserEmail"></span></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">
          Cancel
        </button>
        <button type="button" class="btn btn-danger" id="confirmDelete">
          Delete User
        </button>
      </div>
    </div>
  </div>
</div>

<style>
  .table th {
    vertical-align: middle;
  }

  .table td {
    vertical-align: middle;
  }

  .btn-sm {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
  }

  .action-buttons .btn {
    margin-right: 5px;
  }

  #usersTable_processing {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(255, 255, 255, 0.9);
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
</style>

<script>
  $(document).ready(function () {
    // Initialize DataTable
    const usersTable = $("#usersTable").DataTable({
      processing: true,
      serverSide: true,
      ajax: {
        url: "/admin/userlist", // Adjust this URL to match your API endpoint
        type: "GET",
        data: function (d) {
          // DataTables parameters
          return {
            draw: d.draw,
            page: Math.floor(d.start / d.length) + 1,
            limit: d.length,
            search: d.search,
          };
        },
        dataSrc: function (json) {
          // Transform response for DataTables
          return json.data;
        },
        error: function (xhr, status, error) {
          console.error("DataTable AJAX Error:", error);
          showToast("Error loading users data", "error");
        },
      },
      columns: [
        {
          data: "fullName",
          render: function (data, type, row) {
            return "<strong>" + data + "</strong>";
          },
        },
        {
          data: "email",
          render: function (data, type, row) {
            return '<a href="mailto:' + data + '">' + data + "</a>";
          },
        },
        {
          data: "role",
          render: function (data, type, row) {
            let badgeClass = "badge-secondary";
            if (data === "admin") badgeClass = "badge-danger";
            if (data === "user") badgeClass = "badge-primary";
            return (
              '<span class="badge ' +
              badgeClass +
              '">' +
              data.toUpperCase() +
              "</span>"
            );
          },
        },
        {
          data: "status",
          render: function (data, type, row) {
            return data; // Already formatted in API
          },
        },
        {
          data: null,
          orderable: false,
          searchable: false,
          render: function (data, type, row) {
            return `
                        <div class="action-buttons">
                            <button class="btn btn-info btn-sm view-user" data-email="${row.email}" title="View Details">
                                <i class="fas fa-eye"></i>
                            </button>
                            <button class="btn btn-warning btn-sm edit-user" data-email="${row.email}" title="Edit User">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-danger btn-sm delete-user" data-email="${row.email}" data-name="${row.fullName}" title="Delete User">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    `;
          },
        },
      ],
      order: [[0, "asc"]], // Sort by name by default
      pageLength: 10,
      lengthMenu: [
        [5, 10, 25, 50, 100],
        [5, 10, 25, 50, 100],
      ],
      responsive: true,
      language: {
        processing:
          '<div class="spinner-border text-primary" role="status"><span class="sr-only">Loading...</span></div>',
        emptyTable: "No users found",
        zeroRecords: "No matching users found",
        lengthMenu: "Show _MENU_ users per page",
        info: "Showing _START_ to _END_ of _TOTAL_ users",
        infoEmpty: "Showing 0 to 0 of 0 users",
        infoFiltered: "(filtered from _MAX_ total users)",
        search: "Search users:",
        paginate: {
          first: "First",
          last: "Last",
          next: "Next",
          previous: "Previous",
        },
      },
      dom:
        "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
        "<'row'<'col-sm-12'tr>>" +
        "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
      drawCallback: function (settings) {
        // Reinitialize tooltips after table redraw
        $("[title]").tooltip();
      },
    });

    // Refresh table button
    $("#refreshTable").on("click", function () {
      usersTable.ajax.reload(null, false); // Reload without resetting pagination
      showToast("Users table refreshed", "success");
    });

    // View user details
    $(document).on("click", ".view-user", function () {
      const email = $(this).data("email");
      // You can make an AJAX call to get full user details
      $("#userModalTitle").text("User Details");
      $("#userModalBody").html(`
            <div class="text-center">
                <div class="spinner-border" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                <p>Loading user details...</p>
            </div>
        `);
      $("#userModal").modal("show");

      // Simulate loading user details (replace with actual AJAX call)
      setTimeout(() => {
        $("#userModalBody").html(`
                <div class="row">
                    <div class="col-md-6">
                        <strong>Email:</strong> ${email}<br>
                        <strong>Role:</strong> User<br>
                        <strong>Status:</strong> Active
                    </div>
                    <div class="col-md-6">
                        <strong>Created:</strong> 2024-01-01<br>
                        <strong>Last Login:</strong> 2024-01-15<br>
                        <strong>Profile:</strong> Complete
                    </div>
                </div>
            `);
      }, 1000);
    });

    // Edit user
    $(document).on("click", ".edit-user", function () {
      const email = $(this).data("email");
      window.location.href = `/admin/users/edit?email=${email}`;
    });

    // Delete user confirmation
    $(document).on("click", ".delete-user", function () {
      const email = $(this).data("email");
      const name = $(this).data("name");

      $("#deleteUserName").text(name);
      $("#deleteUserEmail").text(email);
      $("#confirmDelete").data("email", email);
      $("#deleteModal").modal("show");
    });

    // Confirm delete
    $("#confirmDelete").on("click", function () {
      const email = $(this).data("email");
      const button = $(this);

      button
        .prop("disabled", true)
        .html(
          '<span class="spinner-border spinner-border-sm"></span> Deleting...'
        );

      $.ajax({
        url: "/api/users/delete",
        type: "DELETE",
        data: { email: email },
        success: function (response) {
          $("#deleteModal").modal("hide");
          usersTable.ajax.reload();
          showToast(response.message || "User deleted successfully", "success");
        },
        error: function (xhr, status, error) {
          console.error("Delete Error:", error);
          showToast("Failed to delete user", "error");
        },
        complete: function () {
          button.prop("disabled", false).text("Delete User");
        },
      });
    });

    // Toast notification function
    function showToast(message, type = "info") {
      const Toast = Swal.mixin({
        toast: true,
        position: "top-end",
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
          toast.addEventListener("mouseenter", Swal.stopTimer);
          toast.addEventListener("mouseleave", Swal.resumeTimer);
        },
      });

      Toast.fire({
        icon: type,
        title: message,
      });
    }

    // Initialize tooltips
    $("[title]").tooltip();
  });
</script>
