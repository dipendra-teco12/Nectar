<div class="container-box" style="margin-top: 15px">
  <div class="card">
    <div class="card-header">
      <h3 class="card-title">Privacy Policy Editor</h3>
    </div>
    <div class="card-body">
      <div id="summernote"></div>
      <div class="mt-3">
        <button id="save-btn" class="btn btn-primary">
          <i class="fas fa-save"></i> Save Privacy Policy
        </button>

        <button id="reset-btn" class="btn btn-warning ml-2">
          <i class="fas fa-undo"></i> Reset
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Privacy Policy Preview</h5>
        <button type="button" class="close" data-dismiss="modal">
          <span>&times;</span>
        </button>
      </div>
      <div class="modal-body" id="previewContent">
        <!-- Preview content will be shown here -->
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">
          Close
        </button>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/summernote-bs4.min.js"></script>

<script>
  $(document).ready(function () {
    // Check if required libraries are loaded
    if (typeof $ === "undefined") {
      console.error("jQuery is not loaded!");
      return;
    }

    if (typeof $.fn.summernote === "undefined") {
      console.error("Summernote is not loaded!");
      return;
    }

    // Initialize Summernote
    $("#summernote").summernote({
      placeholder: "Enter your privacy policy content here...",
      tabsize: 2,
      height: 400,
      minHeight: 300,
      maxHeight: 600,
      focus: true,
      toolbar: [
        ["style", ["style"]],
        ["font", ["bold", "underline", "clear"]],
        ["fontname", ["fontname"]],
        ["color", ["color"]],
        ["para", ["ul", "ol", "paragraph"]],
        ["table", ["table"]],
        ["insert", ["link", "picture", "video"]],
        ["view", ["fullscreen", "codeview", "help"]],
      ],
      callbacks: {
        onInit: function () {
          console.log("Summernote initialized successfully");
          loadPrivacyPolicy();
        },
        onImageUpload: function (files) {
          // Handle image upload if needed
          console.log("Image uploaded:", files);
        },
      },
    });

    // Load existing privacy policy
    function loadPrivacyPolicy() {
      axios
        .get("/admin/privacy-policy")
        .then(function (response) {
          if (
            response.data &&
            response.data.policy &&
            response.data.policy.html
          ) {
            $("#summernote").summernote("code", response.data.policy.html);
          } else {
            // Set default content
            $("#summernote").summernote(
              "code",
              "<h2>Privacy Policy</h2><p>Enter your privacy policy content here...</p>"
            );
          }
        })
        .catch(function (error) {
          console.error("Error loading privacy policy:", error);
          showToast("Error loading privacy policy", "error");
        });
    }

    // Handle modal focus issues
    $(document).on("hidden.bs.modal", ".note-modal", function () {
      $(".note-editable").focus();
    });

    // Save button click handler
    $("#save-btn").on("click", async function () {
      const htmlContent = $("#summernote").summernote("code");

      // Validate content
      if (
        !htmlContent ||
        htmlContent.trim() === "" ||
        htmlContent === "<p><br></p>"
      ) {
        showToast("Please enter some content before saving", "warning");
        return;
      }

      // Show confirmation modal
      const confirmed =
        typeof showModal === "function"
          ? await new Promise((resolve) => {
              showModal({
                title: "Save Privacy Policy",
                message: "Are you sure you want to save this privacy policy?",
                confirmText: "Save",
                onConfirm: () => resolve(true),
                onCancel: () => resolve(false),
              });
            })
          : confirm("Are you sure you want to save this privacy policy?");

      if (!confirmed) return;

      // Disable save button and show loading
      const saveBtn = $(this);
      const originalText = saveBtn.html();
      saveBtn
        .prop("disabled", true)
        .html(
          '<span class="spinner-border spinner-border-sm"></span> Saving...'
        );

      try {
        const response = await axios.post("/admin/save-privacy", {
          html: htmlContent,
        });

    
        showToast("Privacy policy saved successfully!", "success");
      } catch (error) {
        console.error("Error saving privacy policy:", error);

        let errorMessage = "Failed to save privacy policy.";
        if (
          error.response &&
          error.response.data &&
          error.response.data.message
        ) {
          errorMessage = error.response.data.message;
        }

        showToast(errorMessage, "error");
      } finally {
        // Re-enable save button
        saveBtn.prop("disabled", false).html(originalText);
      }
    });

    // Preview button click handler
    $("#preview-btn").on("click", function () {
      const htmlContent = $("#summernote").summernote("code");
      $("#previewContent").html(htmlContent);
      $("#previewModal").modal("show");
    });

    // Reset button click handler
    $("#reset-btn").on("click", function () {
      if (typeof showModal === "function") {
        showModal({
          title: "Reset Privacy Policy",
          message:
            "Are you sure you want to reset the privacy policy? All unsaved changes will be lost.",
          confirmText: "Reset",
          onConfirm: function () {
            $("#summernote").summernote("reset");
            loadPrivacyPolicy();
            showToast("Privacy policy reset", "info");
          },
        });
      } else if (
        confirm(
          "Are you sure you want to reset the privacy policy? All unsaved changes will be lost."
        )
      ) {
        $("#summernote").summernote("reset");
        loadPrivacyPolicy();
        showToast("Privacy policy reset", "info");
      }
    });

    // Toast notification function
    function showToast(message, type = "info") {
      if (typeof Swal !== "undefined") {
        const Toast = Swal.mixin({
          toast: true,
          position: "top-end",
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true,
          didOpen: (toast) => {
            toast.addEventListener("mouseenter", Swal.stopTimer);
            toast.addEventListener("mouseleave", Swal.resumeTimer);
          },
        });

        Toast.fire({
          icon: type,
          title: message,
        });
      } else {
        alert(message);
      }
    }

    // Make showToast globally available
    window.showToast = showToast;
  });
</script>
